---
- name: install database dependencies
  hosts: db
  tasks:
    - name: Install the package "gcc"
      ansible.builtin.apt:
        name: gcc
    - name: Install the package "make"
      ansible.builtin.apt:
        name: make

- name: configure database
  hosts: db
  vars:
    postgresql_ext_install_contrib: yes
    postgresql_databases:
      - name: '{{ app_db_name }}'
    postgresql_database_extensions:
      - db: 'template1'
        extensions:
          - citext
          - vector
      - db: '{{ app_db_name }}'
        extensions:
          - citext
          - vector
    postgresql_users:
      - name: '{{ app_db_name }}'
        pass: '{{ app_db_password }}'
    postgresql_user_privileges:
      - name: '{{ app_db_user }}'
        db: '{{ app_db_name }}'
        priv: ALL
        role_attr_flags: 'SUPERUSER'
    postgresql_listen_addresses:
      - localhost
      - '{{ private_interface.ipv4.address }}'
    postgresql_pg_hba_passwd_hosts:
      - '0.0.0.0/0'

    pg_dump_backup_aws_access_key_id: '{{ app_db_backup_aws_access_key_id }}'
    pg_dump_backup_aws_secret_access_key: '{{ app_db_backup_aws_secret_access_key }}'
    pg_dump_backup_aws_s3_bucket: '{{ app_db_backup_s3_bucket }}'
    pg_dump_backup_database_name: '{{ app_db_name }}'
    pg_dump_backup_profiles: '{{ app_db_backup_profiles }}'

    postgresql_ext_install_pgvector: true

  roles:
    - { role: server-common, tags: [ server ] }
    - { role: monitoring-common, tags: [ monitoring ] }

    - { role: git, tags: [ app ] }
    - { role: postgresql, tags: [ app ] }

    - { role: pg_dump_backup, tags: [ app,pg_dump_backup ], when: is_live_env }

---
# App
app_name: 'TODO' # eg. api
app_user: '{{ app_name }}'
app_repo: 'TODO' # the bitbucket repo
app_domain: 'TODO' # eg. {{ api_domain }}
app_use_ssl: true
app_url: '{{ app_use_ssl | ternary("https", "http") }}://{{ app_domain }}'

# Services
app_aws_storage_bucket_name: '{{ project_full_name }}-{{ app_name }}-{{ env }}'

# Database
app_db_host: "{{ hostvars[groups['db'][0]].ansible_eth1.ipv4.address }}"
app_db_name: '{{ app_name }}'
app_db_user: '{{ app_name }}'

# AMQP
app_amqp_host: "{{ hostvars[groups['amqp'][0]].ansible_eth1.ipv4.address }}"
app_amqp_vhost: '{{ app_name }}'
app_amqp_user: '{{ app_name }}'

# Django
app_django_superuser_email: 'admin@tsl.io'
app_django_conf_env:
  DJANGO_SETTINGS_MODULE: '{{ app_django_settings_module }}'
  SECRET_KEY: '{{ app_django_secret_key }}'
  DATABASE_URL: 'postgres://{{ app_db_user }}:{{ app_db_password }}@{{ app_db_host }}/{{ app_db_name }}'
  CELERY_BROKER_URL: 'amqp://{{ app_amqp_user }}:{{ app_amqp_password }}@{{ app_amqp_host }}/{{ app_amqp_vhost }}'
  DEFAULT_FROM_EMAIL: '{{ project_verbose_name }}<noreply@{{ project_domain }}>'
  EMAIL_HOST: '{{ mail_smtp_host }}'
  EMAIL_HOST_USER: '{{ mail_smtp_username }}'
  EMAIL_HOST_PASSWORD: '{{ mail_smtp_password }}'
  EMAIL_PORT: '{{ mail_smtp_port }}'
  EMAIL_USE_TLS: true
  AWS_ACCESS_KEY_ID: '{{ app_aws_access_key_id }}'
  AWS_SECRET_ACCESS_KEY: '{{ app_aws_secret_access_key }}'
  AWS_STORAGE_BUCKET_NAME: '{{ app_aws_storage_bucket_name }}'
  SENTRY_DSN: '{{ app_sentry_dsn }}'
  BRANCHIO_KEY: '{{ app_branchio_key }}'
  URL: '{{ app_url }}'
  FRONT_URL: '????'

# Load balancer
app_is_load_balanced: "{{ groups['load-balancer'] | default([]) | length | bool }}"
app_load_balancer_nginx_sites:
  load_balancer:
    template: 'nginx/load-balancer.conf.j2'

# Web
app_web_use_ssl: '{{ app_use_ssl and not app_is_load_balanced }}'
app_web_nginx_sites:
  app:
    template: 'nginx/web.conf.j2'
app_web_base_conf_env: {}
app_web_conf_env: '{{ app_django_conf_env | combine(app_web_base_conf_env) }}'

# Worker
app_worker_base_conf_env: {}
app_worker_conf_env: '{{ app_django_conf_env | combine(app_worker_base_conf_env) }}'

# Scheduler
app_scheduler_base_conf_env: {}
app_scheduler_conf_env: '{{ app_django_conf_env | combine(app_scheduler_base_conf_env) }}'
